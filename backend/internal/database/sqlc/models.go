// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package sqlc

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type InvolvementLevelEnum string

const (
	InvolvementLevelEnumPrimary   InvolvementLevelEnum = "primary"
	InvolvementLevelEnumSecondary InvolvementLevelEnum = "secondary"
)

func (e *InvolvementLevelEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = InvolvementLevelEnum(s)
	case string:
		*e = InvolvementLevelEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for InvolvementLevelEnum: %T", src)
	}
	return nil
}

type NullInvolvementLevelEnum struct {
	InvolvementLevelEnum InvolvementLevelEnum
	Valid                bool // Valid is true if InvolvementLevelEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullInvolvementLevelEnum) Scan(value interface{}) error {
	if value == nil {
		ns.InvolvementLevelEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.InvolvementLevelEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullInvolvementLevelEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.InvolvementLevelEnum), nil
}

type ResistanceTypeEnum string

const (
	ResistanceTypeEnumWeight     ResistanceTypeEnum = "weight"
	ResistanceTypeEnumBand       ResistanceTypeEnum = "band"
	ResistanceTypeEnumBodyweight ResistanceTypeEnum = "bodyweight"
)

func (e *ResistanceTypeEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ResistanceTypeEnum(s)
	case string:
		*e = ResistanceTypeEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for ResistanceTypeEnum: %T", src)
	}
	return nil
}

type NullResistanceTypeEnum struct {
	ResistanceTypeEnum ResistanceTypeEnum
	Valid              bool // Valid is true if ResistanceTypeEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullResistanceTypeEnum) Scan(value interface{}) error {
	if value == nil {
		ns.ResistanceTypeEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ResistanceTypeEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullResistanceTypeEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ResistanceTypeEnum), nil
}

type AppState struct {
	Key       string
	Value     sql.NullString
	CreatedAt sql.NullTime
}

type Exercise struct {
	ExerciseID   int32
	ExerciseName string
	Description  sql.NullString
	CreatedAt    sql.NullTime
}

type ExerciseMuscle struct {
	ExerciseID       int32
	MuscleID         int32
	InvolvementLevel InvolvementLevelEnum
}

type ExerciseOneRm struct {
	UserID       sql.NullInt32
	ExerciseName string
	Estimated1rm interface{}
}

type Muscle struct {
	MuscleID    int32
	MuscleName  string
	MuscleGroup string
	CreatedAt   sql.NullTime
}

type User struct {
	UserID       int32
	Email        string
	PasswordHash string
	Username     string
	Active       sql.NullBool
	AuthProvider sql.NullString
	GoogleID     sql.NullString
	CreatedAt    sql.NullTime
	UpdatedAt    sql.NullTime
	LastLogin    sql.NullTime
}

type UserProfile struct {
	ProfileID         int32
	UserID            sql.NullInt32
	FirstName         sql.NullString
	LastName          sql.NullString
	DateOfBirth       sql.NullTime
	Gender            sql.NullString
	HeightInches      sql.NullInt32
	WeightPounds      sql.NullInt32
	ProfilePictureUrl sql.NullString
	CreatedAt         sql.NullTime
	UpdatedAt         sql.NullTime
}

type Workout struct {
	WorkoutID   int32
	UserID      sql.NullInt32
	WorkoutDate time.Time
	Title       sql.NullString
	CreatedAt   sql.NullTime
	UpdatedAt   sql.NullTime
}

type WorkoutSet struct {
	WorkoutID               int32
	ExerciseID              int32
	SetNumber               int32
	OverallWorkoutSetNumber int32
	Reps                    sql.NullInt32
	ResistanceValue         sql.NullString
	ResistanceType          NullResistanceTypeEnum
	ResistanceDetail        sql.NullString
	Rpe                     sql.NullString
	Percent1rm              sql.NullString
	Notes                   sql.NullString
	CreatedAt               sql.NullTime
}
