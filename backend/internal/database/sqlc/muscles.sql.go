// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: muscles.sql

package sqlc

import (
	"context"
)

const createMuscle = `-- name: CreateMuscle :one
INSERT INTO muscles (muscle_name, muscle_group)
VALUES ($1, $2)
RETURNING muscle_id, muscle_name, muscle_group, created_at
`

type CreateMuscleParams struct {
	MuscleName  string
	MuscleGroup string
}

func (q *Queries) CreateMuscle(ctx context.Context, arg CreateMuscleParams) (Muscle, error) {
	row := q.db.QueryRowContext(ctx, createMuscle, arg.MuscleName, arg.MuscleGroup)
	var i Muscle
	err := row.Scan(
		&i.MuscleID,
		&i.MuscleName,
		&i.MuscleGroup,
		&i.CreatedAt,
	)
	return i, err
}

const deleteMuscle = `-- name: DeleteMuscle :exec
DELETE FROM muscles
WHERE muscle_name = $1
`

func (q *Queries) DeleteMuscle(ctx context.Context, muscleName string) error {
	_, err := q.db.ExecContext(ctx, deleteMuscle, muscleName)
	return err
}

const getMuscle = `-- name: GetMuscle :one
SELECT muscle_name, muscle_group
FROM muscles
WHERE muscle_name = $1
`

type GetMuscleRow struct {
	MuscleName  string
	MuscleGroup string
}

func (q *Queries) GetMuscle(ctx context.Context, muscleName string) (GetMuscleRow, error) {
	row := q.db.QueryRowContext(ctx, getMuscle, muscleName)
	var i GetMuscleRow
	err := row.Scan(&i.MuscleName, &i.MuscleGroup)
	return i, err
}
